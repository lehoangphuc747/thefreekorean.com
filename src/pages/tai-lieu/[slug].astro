---

import Layout from '../../layouts/Layout.astro';
import Button from '../../components/ui/Button.astro';
import Badge from '../../components/ui/Badge.astro';
import DownloadSection from '../../components/DownloadSection.astro';
import PostHero from '../../components/document/PostHero.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../../content/**/*.mdx');
  return allPosts.map(post => ({
    params: { slug: post.url?.split('/').pop()?.replace('.mdx', '') }
  }));
}

const allPosts = await Astro.glob('../../content/**/*.mdx');
const { slug } = Astro.params;
const post = allPosts.find(p => p.url?.split('/').pop()?.replace('.mdx', '') === slug);
if (!post) {
  throw new Error('Kh√¥ng t√¨m th·∫•y t√†i li·ªáu');
}
---

<Layout title={post.frontmatter?.title || 'T√†i li·ªáu'}>
  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-slate-100 py-12">
    <div class="max-w-3xl mx-auto bg-white rounded-xl shadow-lg p-8">

      <!-- PostHero: cover image + scroll to download button -->
      <PostHero
        cover={post.frontmatter?.cover}
        title={post.frontmatter?.title}
        onDownloadClick={() => {
          const el = document.getElementById('download-section');
          if (el) el.scrollIntoView({ behavior: 'smooth' });
        }}
      />

      <!-- Breadcrumbs -->
      <nav class="text-sm mb-4 text-gray-500 flex gap-2 items-center" aria-label="Breadcrumb">
        <a href="/tai-lieu" class="hover:underline text-blue-600">T√†i li·ªáu</a>
        <span>/</span>
        {post.frontmatter?.category && <a href={`/tai-lieu#${post.frontmatter.category.toLowerCase()}`} class="hover:underline text-blue-600">{post.frontmatter.category}</a>}
        <span>/</span>
        <span class="text-gray-700">{post.frontmatter?.title}</span>
      </nav>

      <!-- Title & Meta -->
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">{post.frontmatter?.title}</h1>
      {post.frontmatter?.description && (
        <p class="text-lg text-gray-600 mb-6">{post.frontmatter.description}</p>
      )}
      <div class="flex flex-wrap gap-2 mb-6">
        {post.frontmatter?.category && <Badge variant="primary">{post.frontmatter.category}</Badge>}
        {post.frontmatter?.type && <Badge variant="secondary">{post.frontmatter.type}</Badge>}
        {post.frontmatter?.date && <Badge variant="neutral">{new Date(post.frontmatter.date).toLocaleDateString('vi-VN')}</Badge>}
      </div>
      {post.frontmatter?.cover && (
        <img src={post.frontmatter.cover} alt={post.frontmatter.title} class="w-full max-w-xs mx-auto mb-6 rounded-lg shadow" />
      )}

      <!-- Table of Contents (auto, basic) -->
      <div id="toc" class="mb-8">
        <h2 class="text-lg font-semibold mb-2">M·ª•c l·ª•c</h2>
        <ul class="list-disc list-inside text-sm text-blue-700 space-y-1" id="toc-list"></ul>
      </div>

      <div class="prose max-w-none mb-8" id="doc-content">
        <post.Content />
      </div>
      <div id="download-section">
        <DownloadSection frontmatter={post.frontmatter} />
      </div>

      <!-- Share & Copy Link Section (DocumentShare) -->
      <div class="flex flex-wrap gap-3 mt-8 items-center">
        <Button
          variant="outline"
          size="md"
          class="flex items-center gap-2"
          data-copy-link
        >
          <span>üîó</span> Copy link
        </Button>
        <Button
          variant="ghost"
          size="md"
          class="flex items-center gap-2"
          data-share-facebook
        >
          <span>üìò</span> Chia s·∫ª Facebook
        </Button>
        <Button
          variant="ghost"
          size="md"
          class="flex items-center gap-2"
          data-share-twitter
        >
          <span>üê¶</span> Chia s·∫ª Twitter
        </Button>
      </div>

      <!-- DocumentNavigation: Prev/Next -->
      <div class="flex justify-between mt-10 mb-6">
        {allPosts && (() => {
          const idx = allPosts.findIndex(p => p.url?.split('/').pop()?.replace('.mdx', '') === slug);
          const prev = allPosts[idx - 1];
          const next = allPosts[idx + 1];
          return <>
            {prev ? <a href={`/tai-lieu/${prev.url?.split('/').pop()?.replace('.mdx', '')}`} class="text-blue-600 hover:underline">‚Üê {prev.frontmatter?.title}</a> : <span />}
            {next ? <a href={`/tai-lieu/${next.url?.split('/').pop()?.replace('.mdx', '')}`} class="text-blue-600 hover:underline">{next.frontmatter?.title} ‚Üí</a> : <span />}
          </>;
        })()}
      </div>

      <!-- RelatedDocuments: c√πng category -->
      <div class="mt-12">
        <h2 class="text-lg font-semibold mb-4">T√†i li·ªáu li√™n quan</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          {allPosts.filter(p => p.frontmatter?.category === post.frontmatter?.category && p !== post).slice(0, 4).map(related => (
            <a href={`/tai-lieu/${related.url?.split('/').pop()?.replace('.mdx', '')}`} class="block p-4 bg-gray-50 rounded-lg shadow hover:bg-blue-50 transition">
              <div class="font-semibold text-blue-700 mb-1">{related.frontmatter?.title}</div>
              <div class="text-xs text-gray-500 line-clamp-2">{related.frontmatter?.description}</div>
            </a>
          ))}
        </div>
      </div>
    </div>
  </div>

  <script>
    // Scroll to download from PostHero
    document.addEventListener('DOMContentLoaded', function() {
      const heroBtn = document.querySelector('[data-astro-component="PostHero"] button');
      if (heroBtn) {
        heroBtn.addEventListener('click', function() {
          const el = document.getElementById('download-section');
          if (el) el.scrollIntoView({ behavior: 'smooth' });
        });
      }
    });
    // Table of Contents (auto from h2/h3)
    document.addEventListener('DOMContentLoaded', function() {
      // TOC
      const tocList = document.getElementById('toc-list');
      const content = document.getElementById('doc-content');
      if (tocList && content) {
        const headings = content.querySelectorAll('h2, h3');
        headings.forEach(h => {
          const li = document.createElement('li');
          li.className = h.tagName === 'H2' ? '' : 'ml-4';
          const a = document.createElement('a');
          a.textContent = h.textContent;
          a.href = `#${h.id || h.textContent.replace(/\s+/g, '-').toLowerCase()}`;
          a.className = 'hover:underline';
          li.appendChild(a);
          tocList.appendChild(li);
          // Ensure heading has id
          if (!h.id) h.id = h.textContent.replace(/\s+/g, '-').toLowerCase();
        });
      }

      // Share & Copy Link logic (client only)
      const copyBtn = document.querySelector('[data-copy-link]');
      if (copyBtn) {
        copyBtn.addEventListener('click', function() {
          navigator.clipboard.writeText(window.location.href);
          alert('ƒê√£ copy link t√†i li·ªáu!');
        });
      }
      const fbBtn = document.querySelector('[data-share-facebook]');
      if (fbBtn) {
        fbBtn.addEventListener('click', function() {
          const url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}`;
          window.open(url, '_blank');
        });
      }
      const twBtn = document.querySelector('[data-share-twitter]');
      if (twBtn) {
        twBtn.addEventListener('click', function() {
          const title = document.querySelector('h1')?.textContent || '';
          const url = `https://twitter.com/intent/tweet?url=${encodeURIComponent(window.location.href)}&text=${encodeURIComponent(title)}`;
          window.open(url, '_blank');
        });
      }
    });
  </script>
</Layout>
