---
import TopikLayout from '../../layouts/TopikLayout.astro';
import { getCollection } from 'astro:content';

// L·∫•y slug t·ª´ URL
export async function getStaticPaths() {
  const topikFiles = await import.meta.glob('../../content/topik/*.mdx', { eager: true });
  
  return Object.entries(topikFiles).map(([path, file]) => {
    const slug = path.split('/').pop()?.replace('.mdx', '') || '';
    return {
      params: { slug },
      props: { 
        document: {
          slug,
          title: file.frontmatter?.title || '',
          description: file.frontmatter?.description || '',
          category: file.frontmatter?.category || 'TOPIK',
          type: file.frontmatter?.type || '',
          level: file.frontmatter?.level || '',
          difficulty: file.frontmatter?.difficulty || '',
          cover: file.frontmatter?.cover || '',
          date: file.frontmatter?.date || new Date().toISOString(),
          downloadUrl: file.frontmatter?.downloadUrl || '',
          practiceUrl: file.frontmatter?.practiceUrl || '',
          duration: file.frontmatter?.duration || '',
          questions: file.frontmatter?.questions || 0,
          url: file.frontmatter?.url || '',
          content: file.Content
        }
      }
    };
  });
}

const { document } = Astro.props;

// Helper functions
const getTypeIcon = (type: string) => {
  switch (type) {
    case 'vocabulary': return 'üìñ';
    case 'practice': return 'üìù';
    case 'test': return 'üéØ';
    case 'website': return 'üåê';
    case 'listening': return 'üéß';
    case 'reading': return 'üìÑ';
    case 'writing': return '‚úçÔ∏è';
    default: return 'üìö';
  }
};

const getLevelColor = (level?: string) => {
  switch (level) {
    case 'TOPIK I': return 'from-green-500 to-emerald-600';
    case 'TOPIK II': return 'from-blue-500 to-indigo-600';
    default: return 'from-purple-500 to-pink-600';
  }
};

const getDifficultyColor = (difficulty?: string) => {
  switch (difficulty) {
    case 'Beginner': return 'bg-green-100 text-green-800';
    case 'Intermediate': return 'bg-yellow-100 text-yellow-800';
    case 'Advanced': return 'bg-red-100 text-red-800';
    default: return 'bg-gray-100 text-gray-800';
  }
};
---

<TopikLayout 
  title={document.title}
  description={document.description}
>
  
  <!-- Document Hero -->
  <section class="relative overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-br from-gray-50 via-white to-blue-50"></div>
    <div class="relative max-w-7xl mx-auto px-4 py-16">
      
      <div class="grid lg:grid-cols-2 gap-12 items-center">
        
        <!-- Content -->
        <div>
          <!-- Breadcrumb -->
          <nav class="flex items-center gap-2 text-sm text-gray-500 mb-4">
            <a href="/topik" class="hover:text-blue-600">TOPIK</a>
            <span>‚Ä∫</span>
            <span class="text-gray-900">{document.title}</span>
          </nav>
          
          <!-- Title -->
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            {document.title}
          </h1>
          
          <!-- Description -->
          <p class="text-xl text-gray-600 mb-6 leading-relaxed">
            {document.description}
          </p>
          
          <!-- Meta Info -->
          <div class="flex flex-wrap gap-3 mb-8">
            {document.level && (
              <span class={`px-4 py-2 bg-gradient-to-r ${getLevelColor(document.level)} text-white rounded-lg font-medium text-sm`}>
                {document.level}
              </span>
            )}
            <span class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium text-sm">
              {getTypeIcon(document.type)} {document.type.toUpperCase()}
            </span>
            {document.difficulty && (
              <span class={`px-4 py-2 rounded-lg font-medium text-sm ${getDifficultyColor(document.difficulty)}`}>
                {document.difficulty}
              </span>
            )}
          </div>
          
          <!-- Stats -->
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
            {document.duration && (
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-600">{document.duration}</div>
                <div class="text-sm text-gray-600">Th·ªùi gian</div>
              </div>
            )}
            {document.questions > 0 && (
              <div class="text-center">
                <div class="text-2xl font-bold text-green-600">{document.questions}</div>
                <div class="text-sm text-gray-600">C√¢u h·ªèi</div>
              </div>
            )}
            <div class="text-center">
              <div class="text-2xl font-bold text-purple-600">‚≠ê</div>
              <div class="text-sm text-gray-600">Ch·∫•t l∆∞·ª£ng cao</div>
            </div>
            <div class="text-center">
              <div class="text-2xl font-bold text-orange-600">üÜì</div>
              <div class="text-sm text-gray-600">Mi·ªÖn ph√≠</div>
            </div>
          </div>
          
          <!-- Action Buttons -->
          <div class="flex flex-col sm:flex-row gap-4">
            {document.practiceUrl && (
              <a 
                href={document.practiceUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center justify-center gap-2 px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl font-bold text-lg hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 transform hover:scale-105 shadow-lg"
              >
                üéØ Luy·ªán t·∫≠p ngay
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                </svg>
              </a>
            )}
            {document.downloadUrl && (
              <a 
                href={document.downloadUrl}
                download
                class="flex items-center justify-center gap-2 px-8 py-4 bg-white border-2 border-gray-200 text-gray-700 rounded-xl font-bold text-lg hover:bg-gray-50 transition-all duration-300 shadow-lg"
              >
                üì• T·∫£i v·ªÅ
              </a>
            )}
            {document.url && (
              <a 
                href={document.url}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center justify-center gap-2 px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-xl font-bold text-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 transform hover:scale-105 shadow-lg"
              >
                üåê Truy c·∫≠p
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                </svg>
              </a>
            )}
          </div>
        </div>
        
        <!-- Visual -->
        <div class="lg:order-first">
          {document.cover ? (
            <img 
              src={document.cover} 
              alt={document.title}
              class="w-full max-w-md mx-auto rounded-2xl shadow-2xl"
              loading="lazy"
            />
          ) : (
            <div class={`w-full max-w-md mx-auto h-96 bg-gradient-to-br ${getLevelColor(document.level)} rounded-2xl shadow-2xl flex items-center justify-center`}>
              <span class="text-8xl opacity-80">{getTypeIcon(document.type)}</span>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- Document Content -->
  <section class="py-16 bg-white">
    <div class="max-w-4xl mx-auto px-4">
      <article class="prose prose-lg max-w-none">
        <document.content />
      </article>
    </div>
  </section>

  <!-- Study Tips -->
  {document.type === 'vocabulary' && (
    <section class="py-16 bg-gradient-to-br from-purple-50 to-pink-50">
      <div class="max-w-7xl mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">
            M·∫πo h·ªçc t·ª´ v·ª±ng hi·ªáu qu·∫£
          </h2>
        </div>
        
        <div class="grid md:grid-cols-3 gap-8">
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mb-4">
              <span class="text-xl">üîÑ</span>
            </div>
            <h3 class="text-lg font-bold text-gray-900 mb-2">√în t·∫≠p ƒë·ªÅu ƒë·∫∑n</h3>
            <p class="text-gray-600">√în l·∫°i t·ª´ v·ª±ng m·ªói ng√†y ƒë·ªÉ ghi nh·ªõ l√¢u d√†i</p>
          </div>
          
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="w-12 h-12 bg-pink-100 rounded-xl flex items-center justify-center mb-4">
              <span class="text-xl">üìù</span>
            </div>
            <h3 class="text-lg font-bold text-gray-900 mb-2">T·∫°o c√¢u v√≠ d·ª•</h3>
            <p class="text-gray-600">S·ª≠ d·ª•ng t·ª´ m·ªõi trong c√¢u ƒë·ªÉ hi·ªÉu c√°ch d√πng</p>
          </div>
          
          <div class="bg-white rounded-xl p-6 shadow-lg">
            <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4">
              <span class="text-xl">üéØ</span>
            </div>
            <h3 class="text-lg font-bold text-gray-900 mb-2">Th·ª±c h√†nh ng·ªØ c·∫£nh</h3>
            <p class="text-gray-600">√Åp d·ª•ng t·ª´ v·ª±ng v√†o t√¨nh hu·ªëng th·ª±c t·∫ø</p>
          </div>
        </div>
      </div>
    </section>
  )}

  <!-- Related Documents -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold text-gray-900 mb-4">
          T√†i li·ªáu li√™n quan
        </h2>
        <p class="text-xl text-gray-600">
          Kh√°m ph√° th√™m c√°c t√†i li·ªáu TOPIK kh√°c
        </p>
      </div>
      
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a 
          href="/topik" 
          class="px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors"
        >
          üè† Quay l·∫°i trang TOPIK
        </a>
        <a 
          href="/topik/practice" 
          class="px-6 py-3 bg-orange-600 text-white rounded-lg font-medium hover:bg-orange-700 transition-colors"
        >
          üìù Luy·ªán t·∫≠p th√™m
        </a>
        <a 
          href="/topik/vocabulary" 
          class="px-6 py-3 bg-purple-600 text-white rounded-lg font-medium hover:bg-purple-700 transition-colors"
        >
          üìñ H·ªçc t·ª´ v·ª±ng
        </a>
      </div>
    </div>
  </section>
</TopikLayout>

<style>
  /* Prose styling for content */
  .prose {
    font-size: 1.1rem;
    line-height: 1.8;
  }
  
  .prose h1, .prose h2, .prose h3 {
    color: #1f2937;
  }
  
  .prose a {
    color: #3b82f6;
    text-decoration: none;
  }
  
  .prose a:hover {
    color: #1d4ed8;
    text-decoration: underline;
  }
  
  .prose code {
    background: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #3b82f6;
    padding-left: 1rem;
    font-style: italic;
    background: #f8fafc;
    margin: 1.5rem 0;
    padding: 1rem;
    border-radius: 0.5rem;
  }
</style> 