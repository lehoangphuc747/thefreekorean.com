---
import TopikLayout from '../../../layouts/TopikLayout.astro';
import TopikTestCard from '../../../components/topik/TopikTestCard.astro';

// Sample TOPIK tests data - trong thực tế sẽ load từ database hoặc API
const sampleTests = [
  {
    id: 'topik-i-2023-1',
    title: 'TOPIK I - Kỳ thi tháng 4/2023',
    description: 'Đề thi TOPIK I chính thức kỳ thi tháng 4/2023. Bao gồm 2 phần: Nghe và Đọc với tổng cộng 70 câu hỏi.',
    level: 'TOPIK I' as const,
    year: '2023',
    session: '1차',
    difficulty: 'Medium' as const,
    duration: 100, // 100 minutes
    totalQuestions: 70,
    sections: {
      listening: 30,
      reading: 40
    },
    maxScore: 200,
    passScore: 80,
    isOfficial: true,
    completedCount: 1234,
    averageScore: 156,
    tags: ['official', 'complete', 'audio']
  },
  {
    id: 'topik-ii-2023-1',
    title: 'TOPIK II - Kỳ thi tháng 4/2023',
    description: 'Đề thi TOPIK II chính thức kỳ thi tháng 4/2023. Bao gồm 3 phần: Nghe, Đọc và Viết với độ khó cao.',
    level: 'TOPIK II' as const,
    year: '2023',
    session: '1차',
    difficulty: 'Hard' as const,
    duration: 180, // 180 minutes
    totalQuestions: 54,
    sections: {
      listening: 24,
      reading: 28,
      writing: 2
    },
    maxScore: 300,
    passScore: 120,
    isOfficial: true,
    completedCount: 987,
    averageScore: 198,
    tags: ['official', 'complete', 'audio', 'writing']
  },
  {
    id: 'topik-i-practice-1',
    title: 'TOPIK I - Đề luyện tập số 1',
    description: 'Đề thi thử TOPIK I được biên soạn theo format chính thức. Phù hợp cho người mới bắt đầu ôn luyện.',
    level: 'TOPIK I' as const,
    difficulty: 'Easy' as const,
    duration: 100,
    totalQuestions: 70,
    sections: {
      listening: 30,
      reading: 40
    },
    maxScore: 200,
    passScore: 80,
    isOfficial: false,
    completedCount: 2156,
    averageScore: 142,
    tags: ['practice', 'beginner', 'audio']
  },
  {
    id: 'topik-ii-practice-1',
    title: 'TOPIK II - Đề luyện tập số 1',
    description: 'Đề thi thử TOPIK II với độ khó trung bình. Tập trung vào các dạng bài thường gặp trong kỳ thi.',
    level: 'TOPIK II' as const,
    difficulty: 'Medium' as const,
    duration: 180,
    totalQuestions: 54,
    sections: {
      listening: 24,
      reading: 28,
      writing: 2
    },
    maxScore: 300,
    passScore: 120,
    isOfficial: false,
    completedCount: 1543,
    averageScore: 187,
    tags: ['practice', 'intermediate', 'audio', 'writing']
  },
  {
    id: 'topik-i-2022-2',
    title: 'TOPIK I - Kỳ thi tháng 10/2022',
    description: 'Đề thi TOPIK I chính thức kỳ thi tháng 10/2022. Đề thi có độ khó vừa phải, phù hợp cho ôn luyện.',
    level: 'TOPIK I' as const,
    year: '2022',
    session: '2차',
    difficulty: 'Medium' as const,
    duration: 100,
    totalQuestions: 70,
    sections: {
      listening: 30,
      reading: 40
    },
    maxScore: 200,
    passScore: 80,
    isOfficial: true,
    completedCount: 876,
    averageScore: 149,
    tags: ['official', 'complete', 'audio']
  },
  {
    id: 'topik-listening-focus',
    title: 'TOPIK - Chuyên đề Nghe',
    description: 'Bộ đề thi tập trung vào kỹ năng nghe. Bao gồm các dạng bài nghe từ cơ bản đến nâng cao.',
    level: 'TOPIK II' as const,
    difficulty: 'Medium' as const,
    duration: 60,
    totalQuestions: 30,
    sections: {
      listening: 30
    },
    maxScore: 100,
    passScore: 60,
    isOfficial: false,
    completedCount: 3421,
    averageScore: 72,
    tags: ['listening', 'focus', 'audio', 'skill']
  }
];

// Thống kê
const stats = {
  total: sampleTests.length,
  topikI: sampleTests.filter(test => test.level === 'TOPIK I').length,
  topikII: sampleTests.filter(test => test.level === 'TOPIK II').length,
  official: sampleTests.filter(test => test.isOfficial).length,
  practice: sampleTests.filter(test => !test.isOfficial).length
};
---

<TopikLayout 
  title="Đề thi TOPIK" 
  description="Bộ sưu tập đề thi TOPIK chính thức và đề luyện tập"
>
  
  <!-- Hero Section -->
  <section class="relative overflow-hidden bg-gradient-to-br from-red-50 via-white to-orange-50">
    <div class="max-w-7xl mx-auto px-4 py-16 text-center">
      
      <!-- Hero Icon -->
      <div class="mb-8">
        <div class="w-20 h-20 mx-auto bg-gradient-to-br from-red-500 to-orange-600 rounded-2xl flex items-center justify-center mb-6 shadow-xl">
          <span class="text-3xl">🎯</span>
        </div>
      </div>
      
      <!-- Hero Content -->
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
        <span class="bg-gradient-to-r from-red-600 to-orange-600 bg-clip-text text-transparent">Đề thi TOPIK</span>
      </h1>
      
      <p class="text-xl md:text-2xl text-gray-600 mb-8 max-w-3xl mx-auto leading-relaxed">
        Luyện thi TOPIK với bộ sưu tập đề thi chính thức và đề thi thử 
        được thiết kế theo format chuẩn
      </p>
      
      <!-- Test Stats -->
      <div class="grid grid-cols-2 md:grid-cols-5 gap-4 mb-8 max-w-3xl mx-auto">
        <div class="bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg border border-white/20">
          <div class="text-2xl font-bold text-red-600">{stats.total}</div>
          <div class="text-sm text-gray-600">Tổng đề thi</div>
        </div>
        <div class="bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg border border-white/20">
          <div class="text-2xl font-bold text-green-600">{stats.topikI}</div>
          <div class="text-sm text-gray-600">TOPIK I</div>
        </div>
        <div class="bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg border border-white/20">
          <div class="text-2xl font-bold text-blue-600">{stats.topikII}</div>
          <div class="text-sm text-gray-600">TOPIK II</div>
        </div>
        <div class="bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg border border-white/20">
          <div class="text-2xl font-bold text-amber-600">{stats.official}</div>
          <div class="text-sm text-gray-600">Chính thức</div>
        </div>
        <div class="bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg border border-white/20">
          <div class="text-2xl font-bold text-purple-600">{stats.practice}</div>
          <div class="text-sm text-gray-600">Luyện tập</div>
        </div>
      </div>
      
      <!-- Quick Start -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <button 
          onclick="window.TestFilter?.setLevel('TOPIK I')"
          class="px-8 py-4 bg-gradient-to-r from-green-600 to-emerald-600 text-white rounded-xl font-bold text-lg hover:from-green-700 hover:to-emerald-700 transition-all duration-300 transform hover:scale-105 shadow-lg"
        >
          🟢 Thi TOPIK I
        </button>
        <button 
          onclick="window.TestFilter?.setLevel('TOPIK II')"
          class="px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl font-bold text-lg hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 transform hover:scale-105 shadow-lg"
        >
          🔵 Thi TOPIK II
        </button>
      </div>
    </div>
  </section>

  <!-- Test Types Section -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
          Loại đề thi
        </h2>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Chọn loại đề thi phù hợp với mục tiêu luyện tập của bạn
        </p>
      </div>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
        <!-- Official Tests -->
        <div class="text-center group cursor-pointer" onclick="window.TestFilter?.setType('official')">
          <div class="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-amber-500 to-orange-600 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg">
            <span class="text-3xl">🏆</span>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2">Đề thi chính thức</h3>
          <p class="text-gray-600 mb-3">Các đề thi TOPIK đã được tổ chức chính thức tại Hàn Quốc</p>
          <div class="text-sm text-amber-600 font-medium">{stats.official} đề thi</div>
        </div>
        
        <!-- Practice Tests -->
        <div class="text-center group cursor-pointer" onclick="window.TestFilter?.setType('practice')">
          <div class="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg">
            <span class="text-3xl">📝</span>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2">Đề thi luyện tập</h3>
          <p class="text-gray-600 mb-3">Đề thi thử được biên soạn theo format chuẩn TOPIK</p>
          <div class="text-sm text-purple-600 font-medium">{stats.practice} đề thi</div>
        </div>
        
        <!-- Skill Focus -->
        <div class="text-center group cursor-pointer" onclick="window.TestFilter?.setType('skill')">
          <div class="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg">
            <span class="text-3xl">🎯</span>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2">Chuyên đề kỹ năng</h3>
          <p class="text-gray-600 mb-3">Tập trung luyện tập từng kỹ năng: Nghe, Đọc, Viết</p>
          <div class="text-sm text-blue-600 font-medium">3 kỹ năng</div>
        </div>
        
        <!-- Quick Tests -->
        <div class="text-center group cursor-pointer" onclick="window.TestFilter?.setDifficulty('Easy')">
          <div class="w-20 h-20 mx-auto mb-4 bg-gradient-to-br from-green-500 to-green-600 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg">
            <span class="text-3xl">⚡</span>
          </div>
          <h3 class="text-xl font-bold text-gray-900 mb-2">Đề thi nhanh</h3>
          <p class="text-gray-600 mb-3">Đề thi ngắn để kiểm tra nhanh trình độ hiện tại</p>
          <div class="text-sm text-green-600 font-medium">15-30 phút</div>
        </div>
      </div>
    </div>
  </section>

  <!-- Test Filters -->
  <section class="py-16 bg-gradient-to-br from-gray-50 to-blue-50">
    <div class="max-w-7xl mx-auto px-4">
      
      <!-- Filter Section -->
      <div class="mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-6 max-w-4xl mx-auto">
          <h3 class="text-xl font-bold text-gray-900 mb-4 text-center">🔍 Bộ lọc đề thi</h3>
          
          <div class="grid md:grid-cols-3 gap-6">
            
            <!-- Level Filter -->
            <div>
              <h4 class="text-sm font-semibold text-gray-700 mb-3">Cấp độ TOPIK</h4>
              <div class="space-y-2">
                <button 
                  class="test-filter-btn level-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-all duration-200 active"
                  data-filter="level" 
                  data-value="all"
                >
                  🎯 Tất cả cấp độ
                </button>
                <button 
                  class="test-filter-btn level-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-green-300 hover:bg-green-50 transition-all duration-200"
                  data-filter="level" 
                  data-value="TOPIK I"
                >
                  🟢 TOPIK I (Level 1-2)
                </button>
                <button 
                  class="test-filter-btn level-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-all duration-200"
                  data-filter="level" 
                  data-value="TOPIK II"
                >
                  🔵 TOPIK II (Level 3-6)
                </button>
              </div>
            </div>
            
            <!-- Type Filter -->
            <div>
              <h4 class="text-sm font-semibold text-gray-700 mb-3">Loại đề thi</h4>
              <div class="space-y-2">
                <button 
                  class="test-filter-btn type-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-all duration-200 active"
                  data-filter="type" 
                  data-value="all"
                >
                  📚 Tất cả loại
                </button>
                <button 
                  class="test-filter-btn type-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-amber-300 hover:bg-amber-50 transition-all duration-200"
                  data-filter="type" 
                  data-value="official"
                >
                  🏆 Đề thi chính thức
                </button>
                <button 
                  class="test-filter-btn type-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-purple-300 hover:bg-purple-50 transition-all duration-200"
                  data-filter="type" 
                  data-value="practice"
                >
                  📝 Đề thi luyện tập
                </button>
              </div>
            </div>
            
            <!-- Difficulty Filter -->
            <div>
              <h4 class="text-sm font-semibold text-gray-700 mb-3">Độ khó</h4>
              <div class="space-y-2">
                <button 
                  class="test-filter-btn difficulty-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-all duration-200 active"
                  data-filter="difficulty" 
                  data-value="all"
                >
                  ⚡ Tất cả độ khó
                </button>
                <button 
                  class="test-filter-btn difficulty-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-green-300 hover:bg-green-50 transition-all duration-200"
                  data-filter="difficulty" 
                  data-value="Easy"
                >
                  🟢 Dễ
                </button>
                <button 
                  class="test-filter-btn difficulty-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-yellow-300 hover:bg-yellow-50 transition-all duration-200"
                  data-filter="difficulty" 
                  data-value="Medium"
                >
                  🟡 Trung bình
                </button>
                <button 
                  class="test-filter-btn difficulty-filter w-full px-4 py-2 text-left border border-gray-200 rounded-lg hover:border-red-300 hover:bg-red-50 transition-all duration-200"
                  data-filter="difficulty" 
                  data-value="Hard"
                >
                  🔴 Khó
                </button>
              </div>
            </div>
          </div>
          
          <!-- Reset Filter -->
          <div class="text-center mt-6 pt-4 border-t border-gray-200">
            <button 
              id="reset-filters"
              class="px-6 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors font-medium"
            >
              🔄 Đặt lại bộ lọc
            </button>
          </div>
        </div>
      </div>

      <!-- Search Bar -->
      <div class="mb-8">
        <div class="max-w-md mx-auto">
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
              </svg>
            </div>
            <input
              type="text"
              id="test-search"
              placeholder="Tìm kiếm đề thi..."
              class="w-full pl-10 pr-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white shadow-sm"
            />
          </div>
        </div>
      </div>

      <!-- Tests Grid -->
      <div class="tests-grid" id="tests-grid">
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="tests-container">
          {sampleTests.map(test => (
            <TopikTestCard test={test} />
          ))}
        </div>
      </div>

      <!-- Empty State -->
      <div class="empty-state text-center py-16 hidden" id="empty-state">
        <div class="max-w-md mx-auto">
          <div class="w-24 h-24 mx-auto mb-6 bg-gradient-to-br from-gray-200 to-gray-300 rounded-full flex items-center justify-center">
            <span class="text-4xl">🔍</span>
          </div>
          <h3 class="text-2xl font-bold text-gray-800 mb-3">Không tìm thấy đề thi</h3>
          <p class="text-gray-600 mb-6">
            Không có đề thi nào phù hợp với tiêu chí tìm kiếm.
          </p>
          <button 
            onclick="resetFilters()"
            class="px-6 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg font-medium hover:from-blue-600 hover:to-indigo-700 transition-all duration-200"
          >
            🔄 Đặt lại bộ lọc
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Call to Action -->
  <section class="py-16 bg-gradient-to-r from-red-600 to-orange-600 text-white">
    <div class="max-w-4xl mx-auto px-4 text-center">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">
        Sẵn sàng thử thách bản thân?
      </h2>
      <p class="text-xl mb-8 opacity-90">
        Chọn một đề thi và bắt đầu hành trình chinh phục TOPIK
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <button 
          onclick="startRandomTest()"
          class="px-8 py-4 bg-white text-red-600 rounded-xl font-bold text-lg hover:bg-gray-100 transition-all duration-300 transform hover:scale-105"
        >
          🎲 Đề thi ngẫu nhiên
        </button>
        <button 
          onclick="window.location.href = '/topik/practice'"
          class="px-8 py-4 bg-transparent border-2 border-white text-white rounded-xl font-bold text-lg hover:bg-white hover:text-red-600 transition-all duration-300"
        >
          📝 Luyện tập trước
        </button>
      </div>
    </div>
  </section>
</TopikLayout>

<style>
  /* Filter button states */
  .test-filter-btn.active {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    border-color: #3b82f6;
    transform: scale(1.02);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }
  
  .test-filter-btn:not(.active):hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* Smooth transitions */
  .tests-grid {
    min-height: 400px;
  }
  
  .topik-test-card {
    transition: all 0.3s ease;
  }
  
  .topik-test-card.hidden {
    display: none;
  }
</style>

<script define:vars={{ sampleTests }}>
  document.addEventListener('DOMContentLoaded', function() {
    const testsContainer = document.getElementById('tests-container');
    const emptyState = document.getElementById('empty-state');
    const searchInput = document.getElementById('test-search');
    const resetButton = document.getElementById('reset-filters');
    
    let currentFilters = {
      level: 'all',
      type: 'all',
      difficulty: 'all',
      search: ''
    };
    
    // Apply filters
    function applyFilters() {
      const testCards = document.querySelectorAll('.topik-test-card');
      let visibleCount = 0;
      
      testCards.forEach(card => {
        const testId = card.getAttribute('data-test-id');
        const test = sampleTests.find(t => t.id === testId);
        
        if (!test) return;
        
        let shouldShow = true;
        
        // Level filter
        if (currentFilters.level !== 'all' && test.level !== currentFilters.level) {
          shouldShow = false;
        }
        
        // Type filter
        if (currentFilters.type !== 'all') {
          if (currentFilters.type === 'official' && !test.isOfficial) {
            shouldShow = false;
          } else if (currentFilters.type === 'practice' && test.isOfficial) {
            shouldShow = false;
          }
        }
        
        // Difficulty filter
        if (currentFilters.difficulty !== 'all' && test.difficulty !== currentFilters.difficulty) {
          shouldShow = false;
        }
        
        // Search filter
        if (currentFilters.search) {
          const searchQuery = currentFilters.search.toLowerCase();
          const searchText = `${test.title} ${test.description} ${test.tags?.join(' ') || ''}`.toLowerCase();
          if (!searchText.includes(searchQuery)) {
            shouldShow = false;
          }
        }
        
        // Show/hide card
        if (shouldShow) {
          card.classList.remove('hidden');
          visibleCount++;
        } else {
          card.classList.add('hidden');
        }
      });
      
      // Show/hide empty state
      if (visibleCount === 0) {
        testsContainer?.classList.add('hidden');
        emptyState?.classList.remove('hidden');
      } else {
        testsContainer?.classList.remove('hidden');
        emptyState?.classList.add('hidden');
      }
    }
    
    // Update filter button states
    function updateFilterButtons() {
      const filterButtons = document.querySelectorAll('.test-filter-btn');
      
      filterButtons.forEach(button => {
        const filterType = button.getAttribute('data-filter');
        const filterValue = button.getAttribute('data-value');
        
        if (filterType && filterValue) {
          const isActive = currentFilters[filterType as keyof typeof currentFilters] === filterValue;
          
          if (isActive) {
            button.classList.add('active');
          } else {
            button.classList.remove('active');
          }
        }
      });
    }
    
    // Filter button click handlers
    const filterButtons = document.querySelectorAll('.test-filter-btn');
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterType = this.getAttribute('data-filter');
        const filterValue = this.getAttribute('data-value');
        
        if (filterType && filterValue) {
          currentFilters[filterType as keyof typeof currentFilters] = filterValue;
          updateFilterButtons();
          applyFilters();
        }
      });
    });
    
    // Search input handler
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        currentFilters.search = this.value.trim();
        applyFilters();
      });
    }
    
    // Reset filters
    function resetFilters() {
      currentFilters = {
        level: 'all',
        type: 'all',
        difficulty: 'all',
        search: ''
      };
      
      if (searchInput) {
        searchInput.value = '';
      }
      
      updateFilterButtons();
      applyFilters();
    }
    
    if (resetButton) {
      resetButton.addEventListener('click', resetFilters);
    }
    
    // Random test function
    window.startRandomTest = function() {
      const randomIndex = Math.floor(Math.random() * sampleTests.length);
      const randomTest = sampleTests[randomIndex];
      window.location.href = `/topik/tests/${randomTest.id}`;
    };
    
    // Global filter functions
    window.TestFilter = {
      setLevel: (level) => {
        currentFilters.level = level;
        updateFilterButtons();
        applyFilters();
      },
      setType: (type) => {
        if (type === 'official') {
          currentFilters.type = 'official';
        } else if (type === 'practice') {
          currentFilters.type = 'practice';
        } else if (type === 'skill') {
          // Filter by skill-focused tests (có thể implement logic riêng)
          currentFilters.search = 'focus';
        }
        updateFilterButtons();
        applyFilters();
      },
      setDifficulty: (difficulty) => {
        currentFilters.difficulty = difficulty;
        updateFilterButtons();
        applyFilters();
      }
    };
    
    // Initialize
    updateFilterButtons();
    applyFilters();
  });
</script> 