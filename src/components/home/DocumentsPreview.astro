---
import Badge from '../ui/Badge.astro';

export interface Props {
  documents: Array<{
    slug: string;
    title: string;
    category: string;
    type: string;
    cover?: string;
    description: string;
    date: string;
  }>;
}

const { documents } = Astro.props;

// Highlight the Ti·∫øng H√†n T·ªïng H·ª£p documents
const tongHopDocuments = documents.filter(doc => 
  doc.slug.includes('tieng-han-tong-hop-1-bai')
);

const otherDocuments = documents.filter(doc => 
  !doc.slug.includes('tieng-han-tong-hop-1-bai')
).slice(0, 6 - Math.min(tongHopDocuments.length, 3));

// Ensure T·ªïng H·ª£p documents are featured first (up to 3)
const featuredTongHop = tongHopDocuments.slice(0, 3);
const finalDocuments = [...featuredTongHop, ...otherDocuments];
---

<section class="py-20 bg-white">
  <div class="max-w-7xl mx-auto px-4">
    <div class="text-center mb-16">
      <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-green-500 to-blue-500 rounded-2xl mb-6">
        <span class="text-2xl text-white">üìñ</span>
      </div>
      <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
        T√†i li·ªáu 
        <span class="gradient-text">m·ªõi nh·∫•t</span>
      </h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
        Kh√°m ph√° c√°c b√†i h·ªçc <strong class="text-blue-600">Ti·∫øng H√†n T·ªïng H·ª£p 1</strong> m·ªõi nh·∫•t c√πng nhi·ªÅu t√†i li·ªáu ch·∫•t l∆∞·ª£ng kh√°c
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
      {documents.map((doc, index) => (
        <article 
          class="group bg-gradient-to-br from-white to-gray-50 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 border border-gray-100 hover:border-blue-200 transform hover:-translate-y-2"
          style={`animation-delay: ${index * 0.1}s`}
        >
          <!-- Cover Image -->
          <div class="relative h-48 overflow-hidden bg-gradient-to-br from-blue-600 to-purple-600">
            {doc.cover ? (
              <img 
                src={doc.cover} 
                alt={doc.title}
                class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                loading="lazy"
              />
            ) : (
              <div class="w-full h-full flex flex-col items-center justify-center text-white">
                <span class="text-4xl mb-2">üìö</span>
                <div class="text-center px-4">
                  <div class="text-lg font-bold opacity-90 mb-1">The Free Korean</div>
                  <Badge variant="white" size="sm" class="bg-white bg-opacity-20 text-white border-0">
                    {doc.type}
                  </Badge>
                </div>
              </div>
            )}
            
            <!-- Category overlay -->
            <div class="absolute top-4 left-4">
              <Badge variant="white" size="sm" class="bg-white bg-opacity-90 text-gray-800 backdrop-blur-sm">
                {doc.category}
              </Badge>
            </div>
            
            <!-- Date overlay -->
            <div class="absolute top-4 right-4">
              <div class="bg-black bg-opacity-50 text-white px-2 py-1 rounded text-xs backdrop-blur-sm">
                {new Date(doc.date).toLocaleDateString('vi-VN')}
              </div>
            </div>
          </div>
          
          <!-- Content -->
          <div class="p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors line-clamp-2">
              {doc.title}
            </h3>
            
            <p class="text-gray-600 mb-4 line-clamp-3 leading-relaxed">
              {doc.description}
            </p>
            
            <div class="flex items-center justify-between">
              <Badge variant="neutral" size="sm">
                {doc.type}
              </Badge>
              
              <a 
                href={`/tai-lieu/${doc.slug}`}
                class="inline-flex items-center gap-1 text-blue-600 hover:text-blue-700 font-medium text-sm group-hover:gap-2 transition-all"
              >
                Xem chi ti·∫øt
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
              </a>
            </div>
          </div>
        </article>
      ))}
    </div>
    
    <!-- View All Button -->
    <div class="text-center">
      <a 
        href="/tai-lieu" 
        class="inline-flex items-center gap-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-full font-semibold text-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
      >
        <span>üìö</span>
        Xem t·∫•t c·∫£ t√†i li·ªáu
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .gradient-text {
    background: linear-gradient(135deg, #10b981 0%, #3b82f6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  article {
    opacity: 0;
    transform: translateY(30px);
    animation: slideInUp 0.6s ease-out forwards;
  }
  
  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Intersection Observer for scroll animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.animationPlayState = 'running';
      }
    });
  }, { threshold: 0.1 });
  
  document.addEventListener('DOMContentLoaded', () => {
    const articles = document.querySelectorAll('article');
    articles.forEach(article => {
      article.style.animationPlayState = 'paused';
      observer.observe(article);
    });
  });
</script>
