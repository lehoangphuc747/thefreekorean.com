---
export interface Section {
  subtitle: string;
  icon: string;
  content: string;
}

export interface Props {
  title: string;
  sections: Section[];
}

const { title, sections } = Astro.props;

const icons = {
  lightbulb: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 11-8.486-8.486A5 5 0 0112 6a5 5 0 015 5 5 5 0 01-5 5z" /></svg>`,
  pencil: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" /></svg>`
};
---

<div class="bg-white rounded-3xl shadow-lg p-8 max-w-sm md:max-w-3xl w-full">
  <h2 class="text-2xl font-bold text-slate-800 mb-6">{title}</h2>
  <div class="space-y-6">
    {sections.map((section) => (
      <div>
        <div class="flex items-center gap-3 mb-2 text-slate-800">
          <Fragment set:html={icons[section.icon]} />
          <h3 class="text-lg font-semibold">{section.subtitle}</h3>
        </div>
        <p class="text-slate-600 font-medium leading-relaxed pl-9">{section.content}</p>
      </div>
    ))}
  </div>
</div>
