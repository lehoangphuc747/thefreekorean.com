---
// Component để hiển thị card ngữ pháp trên trang danh sách
export interface Props {
  title: string;
  level: string;
  topikLevel: string;
  grammarType: string;
  difficulty: string;
  description: string;
  slug: string;
  cover?: string;
}

const { title, level, topikLevel, grammarType, difficulty, description, slug, cover } = Astro.props;

// Tạo URL cho trang chi tiết ngữ pháp
const grammarUrl = `/ngu-phap/${slug}`;

// Định nghĩa màu sắc theo level
const getLevelColor = (level: string) => {
  if (level.includes('초급')) return 'bg-green-100 text-green-800';
  if (level.includes('중급')) return 'bg-yellow-100 text-yellow-800';
  if (level.includes('고급')) return 'bg-red-100 text-red-800';
  return 'bg-gray-100 text-gray-800';
};

// Định nghĩa màu sắc theo difficulty
const getDifficultyColor = (difficulty: string) => {
  if (difficulty === 'Cơ bản') return 'bg-blue-100 text-blue-800';
  if (difficulty === 'Trung bình') return 'bg-orange-100 text-orange-800';
  if (difficulty === 'Nâng cao') return 'bg-purple-100 text-purple-800';
  return 'bg-gray-100 text-gray-800';
};
---

<div class="grammar-card bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-200 hover:scale-105 overflow-hidden group">
  <a href={grammarUrl} class="block">
    <!-- Cover Image or Gradient -->
    <div class="h-32 bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center relative overflow-hidden">
      {cover ? (
        <img 
          src={cover} 
          alt={title}
          class="w-full h-full object-cover"
          loading="lazy"
        />
      ) : (
        <div class="text-center text-white">
          <h3 class="text-2xl font-bold mb-1">{title}</h3>
          <div class="text-sm opacity-90">{grammarType}</div>
        </div>
      )}
      
      <!-- Hover overlay -->
      <div class="absolute inset-0 bg-black bg-opacity-20 opacity-0 group-hover:opacity-100 transition-opacity duration-200"></div>
    </div>

    <!-- Card Content -->
    <div class="p-4">
      <!-- Title and Grammar Type -->
      <div class="mb-3">
        <h3 class="text-xl font-bold text-gray-900 mb-1 group-hover:text-blue-600 transition-colors">
          {title}
        </h3>
        <p class="text-sm text-gray-600 line-clamp-2 leading-relaxed">
          {description}
        </p>
      </div>

      <!-- Badges Row -->
      <div class="flex flex-wrap gap-2 mb-3">
        <!-- Level Badge -->
        <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getLevelColor(level)}`}>
          {level}
        </span>
        
        <!-- TOPIK Level Badge -->
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
          TOPIK {topikLevel}
        </span>
        
        <!-- Difficulty Badge -->
        <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getDifficultyColor(difficulty)}`}>
          {difficulty}
        </span>
      </div>

      <!-- Grammar Type -->
      <div class="flex items-center justify-between text-sm text-gray-500">
        <span class="font-medium">{grammarType}</span>
        <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </div>
    </div>
  </a>
</div>

<style>
.grammar-card {
  min-height: 280px;
}

.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .grammar-card {
    min-height: 260px;
  }
}
</style>
