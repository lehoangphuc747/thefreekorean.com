---
// Component: NavBar
// Description: This component displays the main navigation bar for the website
// Used in: Layout.astro (appears on all pages)
// Purpose: Provides navigation links to different sections of the website
//          with responsive design for mobile and desktop views

// Define the current path to highlight active links
const { pathname } = Astro.url;

// Import the styles from the external file
import '../styles/navbar.css';
---

<nav class="navbar">
  <div class="navbar-container">
    <a href="/" class="navbar-logo">
      <span class="logo-icon">한</span>
      <span class="logo-text">The Free Korean</span>
    </a>
    
    <button id="mobile-menu-toggle" class="mobile-menu-toggle" aria-label="Toggle menu">
      <div class="hamburger">
        <span class="line"></span>
        <span class="line"></span>
        <span class="line"></span>
      </div>
    </button>
    
    <div class="navbar-menu-wrapper" id="navbar-menu-wrapper">
      <ul class="navbar-menu" id="navbar-menu">
        <li>
          <a href="/tai-lieu" class={pathname.includes('/tai-lieu') ? 'navbar-link active' : 'navbar-link'}>
            <span class="icon">📚</span>
            <span>Tài liệu</span>
          </a>
        </li>
        <li class="dropdown-container">
          <a href="/ngu-phap" class={pathname.includes('/ngu-phap') ? 'navbar-link dropdown-toggle active' : 'navbar-link dropdown-toggle'}>
            <span class="icon">📝</span>
            <span>Ngữ pháp</span>
            <span class="dropdown-arrow">▼</span>
          </a>
          <div class="dropdown-menu">
            <a href="/ngu-phap" class="dropdown-item">📚 Ngữ pháp cơ bản</a>
            <a href="/ngu-phap-moi" class="dropdown-item">🚀 Dashboard mới</a>
            <a href="/demo-grammar" class="dropdown-item">🧪 Demo Components</a>
          </div>
        </li>
        <li>
          <a href="/lo-trinh" class={pathname.includes('/lo-trinh') ? 'navbar-link active' : 'navbar-link'}>
            <span class="icon">🗺️</span>
            <span>Lộ trình</span>
          </a>
        </li>
        <li class="dropdown-container">
          <a href="#" class="navbar-link dropdown-toggle">
            <span class="icon">✏️</span>
            <span>Ôn tập</span>
            <span class="dropdown-arrow">▼</span>
          </a>
          <div class="dropdown-menu">
            <a href="/ngu-phap-moi?tab=progress" class="dropdown-item">📊 Tiến độ học tập</a>
            <a href="/demo-grammar#quiz" class="dropdown-item">📝 Bài kiểm tra</a>
            <a href="/ngu-phap-moi?tab=list" class="dropdown-item">📋 Danh sách ngữ pháp</a>
            <a href="#" class="dropdown-item">🎧 Luyện nghe</a>
          </div>
        </li>
        <li>
          <a href="#" class="navbar-link">
            <span class="icon">🏆</span>
            <span>TOPIK</span>
          </a>
        </li>
        <li>
          <a href="#" class="contact-link">
            <span class="icon">💬</span>
            <span>Liên hệ</span>
          </a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const navbarMenuWrapper = document.getElementById('navbar-menu-wrapper');
    const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
    const dropdownContainers = document.querySelectorAll('.dropdown-container');
    
    // Mobile menu toggle
    if (mobileMenuToggle && navbarMenuWrapper) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenuToggle.classList.toggle('open');
        navbarMenuWrapper.classList.toggle('open');
        document.body.classList.toggle('menu-open');
      });
    }
    
    // Handle dropdowns on desktop
    dropdownContainers.forEach(container => {
      // Desktop hover behavior
      if (window.innerWidth > 768) {
        container.addEventListener('mouseenter', () => {
          container.classList.add('show-dropdown');
        });
        container.addEventListener('mouseleave', () => {
          container.classList.remove('show-dropdown');
        });
      }
      
      // Mobile click behavior
      const toggle = container.querySelector('.dropdown-toggle');
      toggle?.addEventListener('click', (e) => {
        if (window.innerWidth <= 768) {
          e.preventDefault();
          container.classList.toggle('show-dropdown');
          
          // Close other open dropdowns
          dropdownContainers.forEach(otherContainer => {
            if (otherContainer !== container && otherContainer.classList.contains('show-dropdown')) {
              otherContainer.classList.remove('show-dropdown');
            }
          });
        }
      });
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      const target = e.target as Element;
      
      // Close mobile menu when clicking outside
      if (navbarMenuWrapper?.classList.contains('open') && 
          !navbarMenuWrapper.contains(target) && 
          !mobileMenuToggle?.contains(target)) {
        navbarMenuWrapper.classList.remove('open');
        mobileMenuToggle?.classList.remove('open');
        document.body.classList.remove('menu-open');
      }
      
      // Close dropdowns when clicking outside on mobile
      if (window.innerWidth <= 768) {
        const isClickOnDropdown = Array.from(dropdownContainers).some(container => 
          container.contains(target) && target.closest('.dropdown-toggle')
        );
        
        if (!isClickOnDropdown) {
          dropdownContainers.forEach(container => {
            container.classList.remove('show-dropdown');
          });
        }
      }
    });
    
    // Add scroll effect
    let lastScrollTop = 0;
    const navbar = document.querySelector('.navbar');
    
    window.addEventListener('scroll', () => {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > 100) {
        navbar?.classList.add('scrolled');
      } else {
        navbar?.classList.remove('scrolled');
      }
      
      if (scrollTop > lastScrollTop && scrollTop > 200) {
        navbar?.classList.add('nav-hidden');
      } else {
        navbar?.classList.remove('nav-hidden');
      }
      
      lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
    });
  });
</script>