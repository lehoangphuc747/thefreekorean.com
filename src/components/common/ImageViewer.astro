---
// ImageViewer component for handling images in markdown content
// Automatically wraps all <img> elements with lightbox functionality
---

<div class="image-viewer-container">
  <!-- Lightbox Modal -->
  <div class="lightbox-modal" id="lightbox-modal">
    <div class="lightbox-content">
      <button class="lightbox-close" id="lightbox-close">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
      
      <button class="lightbox-nav lightbox-prev" id="lightbox-prev">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M15 19l-7-7 7-7"/>
        </svg>
      </button>
      
      <button class="lightbox-nav lightbox-next" id="lightbox-next">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 5l7 7-7 7"/>
        </svg>
      </button>
      
      <div class="lightbox-image-container">
        <img class="lightbox-image" id="lightbox-image" alt="">
        <div class="lightbox-caption" id="lightbox-caption"></div>
      </div>
      
      <div class="lightbox-counter" id="lightbox-counter"></div>
    </div>
  </div>
</div>

<style>
  .image-viewer-container {
    position: relative;
  }

  /* Lightbox Modal */
  .lightbox-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 9999;
    cursor: pointer;
  }

  .lightbox-modal.active {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .lightbox-content {
    position: relative;
    max-width: 90vw;
    max-height: 90vh;
    cursor: default;
  }

  .lightbox-close {
    position: absolute;
    top: -40px;
    right: 0;
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
    z-index: 10000;
  }

  .lightbox-close:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  .lightbox-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
    z-index: 10000;
  }

  .lightbox-nav:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  .lightbox-prev {
    left: -60px;
  }

  .lightbox-next {
    right: -60px;
  }

  .lightbox-image-container {
    position: relative;
    max-width: 100%;
    max-height: 100%;
  }

  .lightbox-image {
    max-width: 100%;
    max-height: 80vh;
    object-fit: contain;
    border-radius: 8px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
  }

  .lightbox-caption {
    position: absolute;
    bottom: -40px;
    left: 0;
    right: 0;
    text-align: center;
    color: white;
    font-size: 0.875rem;
    background: rgba(0, 0, 0, 0.7);
    padding: 0.5rem 1rem;
    border-radius: 4px;
  }

  .lightbox-counter {
    position: absolute;
    top: -40px;
    left: 0;
    color: white;
    font-size: 0.875rem;
    background: rgba(0, 0, 0, 0.7);
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
  }

  /* Image styling in markdown */
  .markdown-content img {
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .markdown-content img:hover {
    transform: scale(1.02);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .lightbox-prev {
      left: 10px;
    }

    .lightbox-next {
      right: 10px;
    }

    .lightbox-close {
      top: 10px;
      right: 10px;
    }

    .lightbox-nav {
      width: 40px;
      height: 40px;
    }

    .lightbox-image {
      max-height: 70vh;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('lightbox-modal');
    const closeBtn = document.getElementById('lightbox-close');
    const prevBtn = document.getElementById('lightbox-prev');
    const nextBtn = document.getElementById('lightbox-next');
    const lightboxImage = document.getElementById('lightbox-image');
    const lightboxCaption = document.getElementById('lightbox-caption');
    const lightboxCounter = document.getElementById('lightbox-counter');

    let currentImageIndex = 0;
    let images = [];

    // Initialize image viewer for all images in markdown content
    function initializeImageViewer() {
      const markdownContent = document.querySelector('.markdown-content');
      if (!markdownContent) return;

      images = Array.from(markdownContent.querySelectorAll('img'));
      
      images.forEach((img, index) => {
        img.addEventListener('click', function() {
          openLightbox(index);
        });
      });
    }

    function openLightbox(index) {
      if (images.length === 0) return;
      
      currentImageIndex = index;
      updateLightboxImage();
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeLightbox() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }

    function updateLightboxImage() {
      if (images.length === 0) return;
      
      const currentImg = images[currentImageIndex];
      lightboxImage.src = currentImg.src;
      lightboxImage.alt = currentImg.alt;
      
      // Update caption
      if (currentImg.alt) {
        lightboxCaption.textContent = currentImg.alt;
        lightboxCaption.style.display = 'block';
      } else {
        lightboxCaption.style.display = 'none';
      }
      
      // Update counter
      lightboxCounter.textContent = `${currentImageIndex + 1} / ${images.length}`;
      
      // Update navigation buttons
      prevBtn.style.display = images.length > 1 ? 'flex' : 'none';
      nextBtn.style.display = images.length > 1 ? 'flex' : 'none';
    }

    function showPrevImage() {
      if (images.length === 0) return;
      currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
      updateLightboxImage();
    }

    function showNextImage() {
      if (images.length === 0) return;
      currentImageIndex = (currentImageIndex + 1) % images.length;
      updateLightboxImage();
    }

    // Event listeners
    if (closeBtn) {
      closeBtn.addEventListener('click', closeLightbox);
    }

    if (prevBtn) {
      prevBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        showPrevImage();
      });
    }

    if (nextBtn) {
      nextBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        showNextImage();
      });
    }

    if (modal) {
      modal.addEventListener('click', function(e) {
        if (e.target === modal) {
          closeLightbox();
        }
      });
    }

    // Keyboard navigation
    document.addEventListener('keydown', function(e) {
      if (!modal.classList.contains('active')) return;
      
      switch(e.key) {
        case 'Escape':
          closeLightbox();
          break;
        case 'ArrowLeft':
          showPrevImage();
          break;
        case 'ArrowRight':
          showNextImage();
          break;
      }
    });

    // Initialize when DOM is ready
    initializeImageViewer();
  });
</script>
