---
export interface DialogueExample {
  q_ko: string;
  q_vi: string;
  a_ko: string;
  a_vi: string;
}

export interface SentenceExample {
  ko: string;
  vi: string;
}

export interface Props {
  title?: string;
  dialogueSection: {
    subtitle: string;
    examples: DialogueExample[];
  };
  sentenceSection: {
    subtitle: string;
    examples: SentenceExample[];
  };
  note: {
    subtitle: string;
    content_vi: string;
  };
}

const { title = '🗣️ Ví dụ', dialogueSection, sentenceSection, note } = Astro.props;

// Hàm để highlight ngữ pháp
const highlightGrammar = (text: string, customPatterns: string[] = []) => {
  const defaultPatterns = ['으면서', '면서', '으며', '고', '걸으면서', '부드러우면서', '지으면서', '하야면서'];
  const allPatterns = [...defaultPatterns, ...customPatterns];
  const regex = new RegExp(`(${allPatterns.join('|')})`, 'g');
  
  if (!text) return text;
  
  return text.replace(regex, '<strong class="text-purple-600 font-bold">$1</strong>');
};
---

<section class="bg-white/90 backdrop-blur rounded-2xl border border-slate-200 shadow-sm p-5 md:p-6">
  <div class="flex items-center justify-between flex-wrap gap-3 mb-6">
    <h2 class="text-2xl font-semibold text-slate-900 tracking-tight">{title}</h2>
    <span class="inline-flex items-center gap-2 text-sm font-medium text-white/90 bg-blue-500 px-3 py-1.5 rounded-full shadow-sm">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 8c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 16v5M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707" />
      </svg>
      Tương tác xem dịch
    </span>
  </div>

  <div class="space-y-8">
    <article class="space-y-4">
      <header class="flex items-center justify-between gap-3 text-slate-800">
        <div class="flex items-center gap-3">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
          </svg>
          <h3 class="text-lg font-semibold">{dialogueSection.subtitle}</h3>
        </div>
        <span class="inline-flex items-center gap-1 text-xs font-semibold text-slate-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 5h12M9 3v2m4 13l4-4-4-4M19 17v-2a4 4 0 00-4-4H9" />
          </svg>
          Nhấn để xem dịch
        </span>
      </header>
      <div class="divide-y divide-slate-200 rounded-xl border border-slate-100 overflow-hidden">
        {dialogueSection.examples.map((ex) => (
          <div class="dialogue-item bg-white/70 text-sm font-medium cursor-pointer transition-colors hover:bg-slate-50">
            <div class="px-4 py-3 space-y-2">
              <p class="flex gap-2">
                <span class="font-bold text-blue-600">A:</span>
                <span class="text-slate-800"><Fragment set:html={highlightGrammar(ex.q_ko)} /></span>
              </p>
              <p class="translation hidden text-blue-500 italic pl-6">{ex.q_vi}</p>
              <p class="flex gap-2">
                <span class="font-bold text-rose-600">B:</span>
                <span class="text-slate-800"><Fragment set:html={highlightGrammar(ex.a_ko)} /></span>
              </p>
              <p class="translation hidden text-rose-500 italic pl-6">{ex.a_vi}</p>
            </div>
          </div>
        ))}
      </div>
    </article>

    <article class="space-y-4">
      <header class="flex items-center justify-between gap-3 text-slate-800">
        <div class="flex items-center gap-3">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
          </svg>
          <h3 class="text-lg font-semibold">{sentenceSection.subtitle}</h3>
        </div>
        <span class="inline-flex items-center gap-1 text-xs font-semibold text-slate-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 5h12M9 3v2m4 13l4-4-4-4M19 17v-2a4 4 0 00-4-4H9" />
          </svg>
          Nhấn để xem dịch
        </span>
      </header>
      <ul class="divide-y divide-slate-200 border border-slate-100 rounded-xl overflow-hidden">
        {sentenceSection.examples.map((ex) => (
          <li class="sentence-item bg-white/70 text-sm font-medium text-slate-700 cursor-pointer px-4 py-3 transition-colors hover:bg-slate-50">
            <Fragment set:html={highlightGrammar(ex.ko)} />
            <p class="translation hidden text-slate-500 italic pl-5 mt-1">{ex.vi}</p>
          </li>
        ))}
      </ul>
    </article>

    <aside class="bg-gradient-to-r from-blue-50 via-blue-50/60 to-slate-50 border border-blue-100 rounded-2xl px-5 py-4">
      <div class="flex items-start gap-3 text-blue-800">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M12 20a8 8 0 100-16 8 8 0 000 16z" />
        </svg>
        <div class="flex-1 space-y-1">
          <h3 class="text-base font-semibold">{note.subtitle}</h3>
          <p class="text-slate-600 leading-relaxed">{note.content_vi}</p>
        </div>
      </div>
    </aside>
  </div>
</section>

<script>
// JavaScript cho chức năng toggle translation
document.addEventListener('DOMContentLoaded', function() {
  // Toggle cho dialogue items
  document.querySelectorAll('.dialogue-item').forEach(item => {
    item.addEventListener('click', function() {
      const translations = this.querySelectorAll('.translation');
      translations.forEach(translation => {
        translation.classList.toggle('hidden');
      });
    });
  });

  // Toggle cho sentence items
  document.querySelectorAll('.sentence-item').forEach(item => {
    item.addEventListener('click', function() {
      const translation = this.querySelector('.translation');
      if (translation) {
        translation.classList.toggle('hidden');
      }
    });
  });
});
</script>
