---
export interface SentenceRule {
  id: number;
  description: string;
  examples: string[];
}

export interface Props {
  title?: string;
  rule: SentenceRule;
}

const { title = 'ðŸ“– ThÃ´ng tin cáº¥u trÃºc cÃ¢u', rule } = Astro.props;

// HÃ m Ä‘á»ƒ highlight ngá»¯ phÃ¡p
const highlightGrammar = (text: string, customPatterns: string[] = []) => {
  const defaultPatterns = ['ìœ¼ë©´ì„œ', 'ë©´ì„œ', 'ìœ¼ë©°', 'ê³ ', 'ê±¸ìœ¼ë©´ì„œ', 'ë¶€ë“œëŸ¬ìš°ë©´ì„œ', 'ì§€ìœ¼ë©´ì„œ', 'í•˜ì•¼ë©´ì„œ'];
  const allPatterns = [...defaultPatterns, ...customPatterns];
  const regex = new RegExp(`(${allPatterns.join('|')})`, 'g');
  
  if (!text) return text;
  
  return text.replace(regex, '<strong class="text-purple-600 font-bold">$1</strong>');
};
---

<section class="bg-white/90 backdrop-blur rounded-2xl border border-slate-200 shadow-sm p-5 md:p-6">
  <div class="flex items-center justify-between flex-wrap gap-3 mb-6">
    <h2 class="text-2xl font-semibold text-slate-900 tracking-tight">{title}</h2>
    <span class="inline-flex items-center gap-2 text-sm font-medium text-slate-500 bg-slate-100 px-3 py-1.5 rounded-full">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6" />
      </svg>
      CÃ´ng thá»©c cÃ¢u máº«u
    </span>
  </div>
  <article class="space-y-4">
    <header class="flex items-start gap-3 text-slate-800">
      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-emerald-100 text-emerald-600 font-semibold">â‘ </span>
      <p class="text-lg font-semibold">
        <Fragment set:html={highlightGrammar(rule.description)} />
      </p>
    </header>
    <ul class="space-y-2 text-sm text-slate-600 font-medium">
      {rule.examples.map((ex) => (
        <li class="bg-white/80 border border-emerald-100 rounded-xl px-4 py-3">
          <Fragment set:html={highlightGrammar(ex)} />
        </li>
      ))}
    </ul>
  </article>
</section>
