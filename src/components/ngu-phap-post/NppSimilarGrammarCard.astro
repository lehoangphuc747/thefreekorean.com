---
export interface GrammarPoint {
  description: string;
  example?: string;
}

export interface Grammar {
  name: string;
  points: GrammarPoint[];
}

export interface Comparison {
  id: number;
  title: string;
  g1: Grammar;
  g2: Grammar;
  note?: string;
}

export interface Props {
  title?: string;
  comparisons: Comparison[];
}

const { title = 'ðŸ”„ Ngá»¯ phÃ¡p tÆ°Æ¡ng Ä‘á»“ng', comparisons } = Astro.props;

// HÃ m Ä‘á»ƒ highlight ngá»¯ phÃ¡p
const highlightGrammar = (text: string, customPatterns: string[] = []) => {
  const defaultPatterns = ['ìœ¼ë©´ì„œ', 'ë©´ì„œ', 'ìœ¼ë©°', 'ê³ ', 'ê±¸ìœ¼ë©´ì„œ', 'ë¶€ë“œëŸ¬ìš°ë©´ì„œ', 'ì§€ìœ¼ë©´ì„œ', 'í•˜ì•¼ë©´ì„œ'];
  const allPatterns = [...defaultPatterns, ...customPatterns];
  const regex = new RegExp(`(${allPatterns.join('|')})`, 'g');
  
  if (!text) return text;
  
  return text.replace(regex, '<strong class="text-purple-600 font-bold">$1</strong>');
};
---

<div class="bg-white rounded-3xl shadow-lg p-8 max-w-sm md:max-w-3xl w-full">
  <h2 class="text-2xl font-bold text-slate-800 mb-6">{title}</h2>
  <div class="space-y-8">
    {comparisons.map((comp) => (
      <div>
        <h3 class="font-bold text-slate-700 mb-4 text-center text-lg">
          <span class="font-bold bg-slate-200 text-slate-600 rounded-full w-6 h-6 inline-flex items-center justify-center mr-2">
            {comp.id}
          </span>
          <Fragment set:html={highlightGrammar(comp.title)} />
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-slate-50 p-4 rounded-xl">
            <h4 class="font-bold text-center text-purple-600 mb-3">{comp.g1.name}</h4>
            <div class="space-y-3 text-sm text-slate-600">
              {comp.g1.points.map((point) => (
                <div>
                  <p class="font-semibold text-slate-800">{point.description}</p>
                  {point.example && (
                    <p class="mt-1 text-slate-600">
                      <Fragment set:html={highlightGrammar(point.example)} />
                    </p>
                  )}
                </div>
              ))}
            </div>
          </div>
          <div class="bg-slate-50 p-4 rounded-xl">
            <h4 class="font-bold text-center text-purple-600 mb-3">{comp.g2.name}</h4>
            <div class="space-y-3 text-sm text-slate-600">
              {comp.g2.points.map((point) => (
                <div>
                  <p class="font-semibold text-slate-800">{point.description}</p>
                  {point.example && (
                    <p class="mt-1 text-slate-600">
                      <Fragment set:html={highlightGrammar(point.example)} />
                    </p>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
        {comp.note && (
          <p class="text-xs text-slate-500 mt-4">
            <span class="font-bold">*</span> {comp.note}
          </p>
        )}
      </div>
    ))}
  </div>
</div>
